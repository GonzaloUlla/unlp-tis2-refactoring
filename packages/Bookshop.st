TestCase subclass: #BookTest	instanceVariableNames: 'book bestSeller'	classVariableNames: ''	poolDictionaries: ''	category: 'Bookshop-Tests'!!BookTest commentStamp: '<historical>' prior: 0!A BookTest is a test class for testing the behavior of Book!!BookTest methodsFor: 'test' stamp: 'JulianGrigera 9/13/2019 13:47'!testPrice	self assert: bestSeller price closeTo: 135.1.	self assert: book price closeTo: 122! !!BookTest methodsFor: 'test' stamp: 'GonzaloUlla 10/24/2019 00:58'!testTruncateTitleTo	self assert: (bestSeller truncateTitleTo: 4) equals: 'Long...'.	self assert: (book truncateTitleTo: 20) equals: 'Short Title'! !!BookTest methodsFor: 'test' stamp: 'JulianGrigera 9/13/2019 13:46'!testCommission	self assert: book commission equals: 1.	self assert: bestSeller commission equals: 2! !!BookTest methodsFor: 'test' stamp: 'JulianGrigera 9/13/2019 13:51'!testPriceBeforeTax	self assert: bestSeller priceBeforeTax closeTo: 112.	self assert: book priceBeforeTax closeTo: 101! !!BookTest methodsFor: 'test' stamp: 'GitHub 10/24/2019 22:46:23'!testPriceBaseline	self assert: bestSeller priceBaseline closeTo: 110.	self assert: book priceBaseline closeTo: 100! !!BookTest methodsFor: 'running' stamp: 'GonzaloUlla 10/24/2019 00:55'!setUp	book := Book new		price: 100;		title: 'Short Title';		yourself.	bestSeller := Book newBestSeller		price: 100;		title: 'Long Title';		yourself! !WAComponent subclass: #WABookshopView	instanceVariableNames: 'bookstore section'	classVariableNames: ''	poolDictionaries: ''	category: 'Bookshop-Web'!!WABookshopView commentStamp: 'JulianGrigera 9/6/2019 15:38' prior: 0!Main view for the Bookshop!!WABookshopView methodsFor: 'initialization' stamp: 'GitHub 10/24/2019 22:46:23'!initialize	super initialize.	bookstore := Catalog instance.	section := #home! !!WABookshopView methodsFor: 'rendering-elements' stamp: 'GonzaloUlla 10/24/2019 00:49'!renderBookThumbnailOn: html of: aBook withTitle: aTitle	html tbsThumbnail		style: 'display:inline-block;width:300px;margin:20px;';		with: [ html image placeHolder: '100%x180'.			html heading level4 with: aTitle.			html paragraph: aBook author name.			html heading level5 with: aBook price ]! !!WABookshopView methodsFor: 'rendering-elements' stamp: 'GonzaloUlla 10/24/2019 01:01'!renderBooksOn: html	^ bookstore books do: [ :eachBook | self renderBookThumbnailOn: html of: eachBook withTitle: (eachBook truncateTitleTo: 30) ]! !!WABookshopView methodsFor: 'rendering-navigation' stamp: 'GitHub 10/24/2019 22:46:23'!renderNavigationItemOn: html section: aSection anchorName: anAnchorName	| navigationItem |	navigationItem := html tbsNavItem.	section = aSection		ifTrue: [ navigationItem beActive ].	navigationItem		with: [ html anchor				callback: [ section := aSection ];				with: anAnchorName ]! !!WABookshopView methodsFor: 'rendering' stamp: 'JuliRios 10/23/2019 06:09:55'!renderHeaderOn: html	html		tbsPageHeader: [ html				heading: [ html text: 'Online Bookshop'.					html space.					html small: 'The best catalog around!!' ] ]! !!WABookshopView methodsFor: 'rendering' stamp: 'JuliRios 10/23/2019 06:09:55'!renderFooterOn: html	html tbsContainerFluid: [ html paragraph: '(c) 2019 Bookshop' ]! !!WABookshopView methodsFor: 'rendering' stamp: 'JuliRios 10/23/2019 06:09:55'!renderContentOn: html	html		tbsContainerFluid: [ self				renderHeaderOn: html;				renderBodyOn: html;				renderBooksOn: html ].	self renderFooterOn: html! !!WABookshopView methodsFor: 'rendering' stamp: 'GitHub 10/24/2019 22:46:23'!renderBodyOn: html	html tbsNav		bePills;		with: [ self renderNavigationItemOn: html section: #home anchorName: 'Home'.			self renderNavigationItemOn: html section: #latest anchorName: 'Latest'.			self renderNavigationItemOn: html section: #featured anchorName: 'Featured' ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WABookshopView class	instanceVariableNames: ''!!WABookshopView class methodsFor: 'initialization' stamp: 'JulianGrigera 9/6/2019 15:43'!initialize	| app |	app := WAAdmin register: self asApplicationAt: #bookshop.	app addLibrary: TBSDevelopmentLibrary! !WABookshopView initialize!Object subclass: #Book	instanceVariableNames: 'title author price isBestSeller'	classVariableNames: ''	poolDictionaries: ''	category: 'Bookshop'!!Book commentStamp: 'JulianGrigera 9/6/2019 18:35' prior: 0!A book for sale!!Book methodsFor: 'initialization' stamp: 'JulianGrigera 9/13/2019 13:27'!initialize	super initialize.	isBestSeller := false! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!author: anObject	author := anObject! !!Book methodsFor: 'accessing' stamp: 'GitHub 10/24/2019 22:46:23'!commission	| commission |	commission := self isBestSeller		ifTrue: [ price / 50 ]		ifFalse: [ price / 100 ].	^ commission! !!Book methodsFor: 'accessing' stamp: 'GitHub 10/24/2019 22:46:23'!price	^ self priceBaseline * 1.21 + self commission! !!Book methodsFor: 'accessing' stamp: 'GitHub 10/24/2019 22:46:23'!priceBaseline	| basePrice |	basePrice := self isBestSeller		ifTrue: [ price * 1.1 ]		ifFalse: [ price ].	^ basePrice! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!title: anObject	title := anObject! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/13/2019 13:06'!isBestSeller	^ isBestSeller! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!author	^ author! !!Book methodsFor: 'accessing' stamp: 'GitHub 10/24/2019 22:46:23'!priceBeforeTax	^ self priceBaseline + self commission! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!title	^ title! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/13/2019 13:08'!isBestSeller: aBoolean	isBestSeller := aBoolean! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!price: anObject	price := anObject! !!Book methodsFor: 'truncation' stamp: 'GonzaloUlla 10/24/2019 00:57'!truncateTitleTo: anInteger	| truncatedTitle |	self title size > anInteger		ifTrue: [ truncatedTitle := self title first: (anInteger min: self title size).			truncatedTitle := truncatedTitle , '...' ]		ifFalse: [ truncatedTitle := self title ].	^ truncatedTitle! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Book class	instanceVariableNames: ''!!Book class methodsFor: 'instance creation' stamp: 'GitHub 10/24/2019 22:46:23'!newBestSeller	| bestSeller |	bestSeller := Book new.	bestSeller isBestSeller: true.	^ bestSeller! !Object subclass: #BookAuthor	instanceVariableNames: 'name'	classVariableNames: ''	poolDictionaries: ''	category: 'Bookshop'!!BookAuthor commentStamp: 'JulianGrigera 9/6/2019 18:36' prior: 0!An author for books!!BookAuthor methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!name	^ name! !!BookAuthor methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!name: anObject	name := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BookAuthor class	instanceVariableNames: ''!!BookAuthor class methodsFor: 'instance creation' stamp: 'JulianGrigera 9/6/2019 18:37'!named: aString	^ self new		name: aString;		yourself! !Object subclass: #Catalog	instanceVariableNames: 'books'	classVariableNames: 'Instance'	poolDictionaries: ''	category: 'Bookshop'!!Catalog commentStamp: 'JulianGrigera 9/6/2019 17:15' prior: 0!Bookstore holds all books in the catalog!!Catalog methodsFor: 'initialization' stamp: 'JulianGrigera 9/6/2019 17:23'!initialize	super initialize.	books := OrderedCollection new! !!Catalog methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 17:15'!books	^ books! !!Catalog methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 17:15'!books: aBook	books := aBook! !!Catalog methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 17:16'!addBook: aBook	self books add: aBook! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Catalog class	instanceVariableNames: ''!!Catalog class methodsFor: 'singleton' stamp: 'JulianGrigera 9/13/2019 13:59'!resetInstance	<script>	Instance := nil! !!Catalog class methodsFor: 'singleton' stamp: 'JulianGrigera 9/6/2019 18:37'!loadBooks	Instance		addBook:			(Book new				title: 'Where the Crawdads Sing';				author: (BookAuthor named: 'Delia Owens');				price: 14.99);		addBook:			(Book new				title: 'A Better Man: A Chief Inspector Gamache Novel';				author: (BookAuthor named: 'Louise Penny');				price: 14.99);		addBook:			(Book new				title: 'One Good Deed';				author: (BookAuthor named: 'David Baldacci');				price: 14.99);		addBook:			(Book new				title: 'City of Girls: A Novel';				author: (BookAuthor named: 'Elizabeth Gilbert');				price: 14.99);		addBook:			(Book new				title: 'Educated: A Memoir';				author: (BookAuthor named: 'Tara Westover');				price: 14.99);		addBook:			(Book new				title: 'Becoming';				author: (BookAuthor named: 'Michelle Obama');				price: 14.99);		addBook:			(Book new				title: 'Sapiens: A Brief History of Humankind';				author: (BookAuthor named: 'Yuval Noah Harari');				price: 14.99);		addBook:			(Book new				title: 'The Subtle Art of Not Giving a F*ck: A Counterintuitive Approach to Living a Good Life';				author: (BookAuthor named: 'Mark Manson');				price: 12.99)! !!Catalog class methodsFor: 'singleton' stamp: 'JulianGrigera 9/6/2019 18:29'!instance	^ Instance		ifNil: [ Instance := self new.			self loadBooks.			Instance ]! !